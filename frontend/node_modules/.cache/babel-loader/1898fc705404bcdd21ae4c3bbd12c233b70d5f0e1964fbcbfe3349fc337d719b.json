{"ast":null,"code":"var _jsxFileName = \"/Users/razashaikh/Desktop/sih/python-app/frontend/src/pages/ProjectCreate.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Typography, Box, TextField, Button, Grid, MenuItem, Stepper, Step, StepLabel, Card, CardContent, Alert, CircularProgress, Paper, IconButton, Chip, Divider, List, ListItem, ListItemText, ListItemIcon, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Select, InputAdornment, LinearProgress } from '@mui/material';\nimport { PhotoCamera, VideoCall, AudioFile, GpsFixed, CloudUpload, Delete, Preview, Nature, Water, Thermostat, Speed, Analytics, Blockchain, Storage } from '@mui/icons-material';\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';\nimport { projectAPI, handleAPIError } from '../services/api';\nimport { useSnackbar } from 'notistack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationPicker = ({\n  position,\n  setPosition\n}) => {\n  _s();\n  useMapEvents({\n    click(e) {\n      setPosition({\n        lat: e.latlng.lat,\n        lng: e.latlng.lng\n      });\n    }\n  });\n  return position ? /*#__PURE__*/_jsxDEV(Marker, {\n    position: [position.lat, position.lng]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 21\n  }, this) : null;\n};\n_s(LocationPicker, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = LocationPicker;\nconst ProjectCreate = () => {\n  _s2();\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [activeStep, setActiveStep] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [previewDialog, setPreviewDialog] = useState({\n    open: false,\n    file: null\n  });\n\n  // File input refs\n  const photoInputRef = useRef(null);\n  const videoInputRef = useRef(null);\n  const audioInputRef = useRef(null);\n  const documentInputRef = useRef(null);\n  const [formData, setFormData] = useState({\n    // Basic project info\n    project_name: '',\n    location: {\n      lat: 19.0760,\n      lng: 72.8777\n    },\n    // Default to Mumbai\n    area_hectares: '',\n    ecosystem_type: '',\n    restoration_method: '',\n    community_details: '',\n    contact_email: '',\n    phone_number: '',\n    // Media files with geo-tagging\n    media_files: {\n      photos: [],\n      videos: [],\n      audio_recordings: [],\n      documents: []\n    },\n    // Field measurements\n    field_measurements: {\n      water_quality: {\n        ph_level: '',\n        salinity: '',\n        temperature: '',\n        dissolved_oxygen: ''\n      },\n      soil_analysis: {\n        carbon_content: '',\n        nitrogen_level: '',\n        phosphorus_level: '',\n        moisture_content: ''\n      },\n      biodiversity: {\n        species_count: '',\n        vegetation_density: '',\n        wildlife_observations: ''\n      },\n      environmental: {\n        tide_level: '',\n        weather_conditions: '',\n        visibility: ''\n      }\n    },\n    // GPS tracking\n    gps_data: {\n      waypoints: [],\n      track_log: [],\n      boundary_coordinates: []\n    },\n    // IPFS and blockchain\n    ipfs_hashes: [],\n    blockchain_tx_hash: ''\n  });\n  const ecosystemTypes = ['mangrove', 'seagrass', 'salt_marsh', 'coastal_wetland', 'coral_reef', 'mudflat'];\n  const restorationMethods = ['Natural regeneration', 'Assisted regeneration', 'Active restoration', 'Hybrid approach', 'Community-based restoration', 'Scientific intervention'];\n  const steps = ['Project Details', 'Location & GPS', 'Media Upload', 'Field Measurements', 'Community Info', 'Blockchain & IPFS', 'Review & Submit'];\n\n  // Get current GPS location\n  const getCurrentLocation = useCallback(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const newLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setFormData(prev => ({\n          ...prev,\n          location: newLocation\n        }));\n        enqueueSnackbar('Location updated successfully!', {\n          variant: 'success'\n        });\n      }, error => {\n        enqueueSnackbar('Unable to get current location', {\n          variant: 'warning'\n        });\n      }, {\n        enableHighAccuracy: true\n      });\n    } else {\n      enqueueSnackbar('Geolocation is not supported by this browser', {\n        variant: 'error'\n      });\n    }\n  }, [enqueueSnackbar]);\n\n  // Add GPS waypoint\n  const addWaypoint = useCallback(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const waypoint = {\n          id: Date.now(),\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          timestamp: new Date().toISOString(),\n          accuracy: position.coords.accuracy\n        };\n        setFormData(prev => ({\n          ...prev,\n          gps_data: {\n            ...prev.gps_data,\n            waypoints: [...prev.gps_data.waypoints, waypoint]\n          }\n        }));\n        enqueueSnackbar('Waypoint added successfully!', {\n          variant: 'success'\n        });\n      }, error => {\n        enqueueSnackbar('Unable to get GPS location for waypoint', {\n          variant: 'warning'\n        });\n      }, {\n        enableHighAccuracy: true\n      });\n    }\n  }, [enqueueSnackbar]);\n\n  // Handle file upload with geo-tagging\n  const handleFileUpload = async (files, type) => {\n    setIsUploading(true);\n    setUploadProgress(0);\n    const uploadedFiles = [];\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n\n      // Get current location for geo-tagging\n      const location = await new Promise(resolve => {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(position => resolve({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n            accuracy: position.coords.accuracy\n          }), () => resolve(formData.location) // Fallback to manual location\n          );\n        } else {\n          resolve(formData.location);\n        }\n      });\n      const fileData = {\n        id: Date.now() + i,\n        file,\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified,\n        location,\n        timestamp: new Date().toISOString(),\n        ipfs_hash: '' // To be filled after IPFS upload\n      };\n      uploadedFiles.push(fileData);\n      setUploadProgress((i + 1) / files.length * 100);\n    }\n    setFormData(prev => ({\n      ...prev,\n      media_files: {\n        ...prev.media_files,\n        [type]: [...prev.media_files[type], ...uploadedFiles]\n      }\n    }));\n    setIsUploading(false);\n    setUploadProgress(0);\n    enqueueSnackbar(`${files.length} ${type} uploaded successfully!`, {\n      variant: 'success'\n    });\n  };\n\n  // Upload to IPFS (simulated)\n  const uploadToIPFS = async file => {\n    // Simulate IPFS upload\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const hash = `Qm${Math.random().toString(36).substring(2, 15)}${Math.random().toString(36).substring(2, 15)}`;\n        resolve(hash);\n      }, 1000);\n    });\n  };\n\n  // Remove uploaded file\n  const removeFile = (type, fileId) => {\n    setFormData(prev => ({\n      ...prev,\n      media_files: {\n        ...prev.media_files,\n        [type]: prev.media_files[type].filter(file => file.id !== fileId)\n      }\n    }));\n    enqueueSnackbar('File removed successfully', {\n      variant: 'info'\n    });\n  };\n  const handleInputChange = field => event => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: event.target.value\n    }));\n  };\n  const handleNestedInputChange = (section, field) => event => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: event.target.value\n      }\n    }));\n  };\n  const handleDeepNestedInputChange = (section, subsection, field) => event => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [subsection]: {\n          ...prev[section][subsection],\n          [field]: event.target.value\n        }\n      }\n    }));\n  };\n  const handleLocationChange = newPosition => {\n    setFormData(prev => ({\n      ...prev,\n      location: newPosition\n    }));\n  };\n  const validateStep = step => {\n    switch (step) {\n      case 0:\n        return formData.project_name && formData.ecosystem_type && formData.restoration_method;\n      case 1:\n        return formData.area_hectares && formData.location.lat && formData.location.lng;\n      case 2:\n        return formData.community_details && formData.contact_email && formData.phone_number;\n      default:\n        return true;\n    }\n  };\n  const handleNext = () => {\n    if (validateStep(activeStep)) {\n      setActiveStep(prev => prev + 1);\n    } else {\n      enqueueSnackbar('Please fill in all required fields', {\n        variant: 'warning'\n      });\n    }\n  };\n  const handleBack = () => {\n    setActiveStep(prev => prev - 1);\n  };\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n      const projectData = {\n        ...formData,\n        area_hectares: parseFloat(formData.area_hectares)\n      };\n      await projectAPI.create(projectData);\n      enqueueSnackbar('Project created successfully!', {\n        variant: 'success'\n      });\n      navigate('/projects');\n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      enqueueSnackbar(errorInfo.message, {\n        variant: 'error'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderStepContent = () => {\n    switch (activeStep) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Project Name\",\n              value: formData.project_name,\n              onChange: handleInputChange('project_name'),\n              required: true,\n              placeholder: \"e.g., Coastal Mangrove Restoration Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              select: true,\n              label: \"Ecosystem Type\",\n              value: formData.ecosystem_type,\n              onChange: handleInputChange('ecosystem_type'),\n              required: true,\n              children: ecosystemTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: type,\n                children: type.charAt(0).toUpperCase() + type.slice(1)\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              select: true,\n              label: \"Restoration Method\",\n              value: formData.restoration_method,\n              onChange: handleInputChange('restoration_method'),\n              required: true,\n              children: restorationMethods.map(method => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: method,\n                children: method\n              }, method, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this);\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              type: \"number\",\n              label: \"Area (Hectares)\",\n              value: formData.area_hectares,\n              onChange: handleInputChange('area_hectares'),\n              required: true,\n              inputProps: {\n                min: 0,\n                step: 0.1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: [\"Current Location: \", formData.location.lat.toFixed(6), \", \", formData.location.lng.toFixed(6)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 300,\n                border: '1px solid #ccc',\n                borderRadius: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(MapContainer, {\n                center: [formData.location.lat, formData.location.lng],\n                zoom: 13,\n                style: {\n                  height: '100%',\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                  url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n                  attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(LocationPicker, {\n                  position: formData.location,\n                  setPosition: handleLocationChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"textSecondary\",\n              sx: {\n                mt: 1,\n                display: 'block'\n              },\n              children: \"Click on the map to set project location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              rows: 4,\n              label: \"Community Details\",\n              value: formData.community_details,\n              onChange: handleInputChange('community_details'),\n              required: true,\n              placeholder: \"Describe the local communities involved, their role, and expected benefits...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              type: \"email\",\n              label: \"Contact Email\",\n              value: formData.contact_email,\n              onChange: handleInputChange('contact_email'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Phone Number\",\n              value: formData.phone_number,\n              onChange: handleInputChange('phone_number'),\n              required: true,\n              placeholder: \"+91 XXXXX XXXXX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            sx: {\n              mb: 3\n            },\n            children: \"Please review your project details before submission. Once submitted, the project will be sent to NCCR for review and approval.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Project Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 29\n                }, this), \" \", formData.project_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ecosystem:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 29\n                }, this), \" \", formData.ecosystem_type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Method:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 29\n                }, this), \" \", formData.restoration_method]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Area:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 29\n                }, this), \" \", formData.area_hectares, \" hectares\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Contact Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 29\n                }, this), \" \", formData.contact_email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Phone:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 29\n                }, this), \" \", formData.phone_number]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Location:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 29\n                }, this), \" \", formData.location.lat.toFixed(4), \", \", formData.location.lng.toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Community Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: formData.community_details\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Create New Blue Carbon Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: activeStep,\n          sx: {\n            mb: 4\n          },\n          children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n            children: /*#__PURE__*/_jsxDEV(StepLabel, {\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this), renderStepContent(), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mt: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: activeStep === 0,\n            onClick: handleBack,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: activeStep === steps.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleSubmit,\n              disabled: loading,\n              startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 40\n              }, this) : null,\n              children: loading ? 'Submitting...' : 'Submit Project'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleNext,\n              disabled: !validateStep(activeStep),\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 546,\n    columnNumber: 5\n  }, this);\n};\n_s2(ProjectCreate, \"Sy2C/cjG8PhBNteqLvoYVwIRS/0=\", false, function () {\n  return [useNavigate, useSnackbar];\n});\n_c2 = ProjectCreate;\nexport default ProjectCreate;\nvar _c, _c2;\n$RefreshReg$(_c, \"LocationPicker\");\n$RefreshReg$(_c2, \"ProjectCreate\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useNavigate","Typography","Box","TextField","Button","Grid","MenuItem","Stepper","Step","StepLabel","Card","CardContent","Alert","CircularProgress","Paper","IconButton","Chip","Divider","List","ListItem","ListItemText","ListItemIcon","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","Select","InputAdornment","LinearProgress","PhotoCamera","VideoCall","AudioFile","GpsFixed","CloudUpload","Delete","Preview","Nature","Water","Thermostat","Speed","Analytics","Blockchain","Storage","MapContainer","TileLayer","Marker","useMapEvents","projectAPI","handleAPIError","useSnackbar","jsxDEV","_jsxDEV","LocationPicker","position","setPosition","_s","click","e","lat","latlng","lng","fileName","_jsxFileName","lineNumber","columnNumber","_c","ProjectCreate","_s2","navigate","enqueueSnackbar","activeStep","setActiveStep","loading","setLoading","uploadProgress","setUploadProgress","isUploading","setIsUploading","previewDialog","setPreviewDialog","open","file","photoInputRef","videoInputRef","audioInputRef","documentInputRef","formData","setFormData","project_name","location","area_hectares","ecosystem_type","restoration_method","community_details","contact_email","phone_number","media_files","photos","videos","audio_recordings","documents","field_measurements","water_quality","ph_level","salinity","temperature","dissolved_oxygen","soil_analysis","carbon_content","nitrogen_level","phosphorus_level","moisture_content","biodiversity","species_count","vegetation_density","wildlife_observations","environmental","tide_level","weather_conditions","visibility","gps_data","waypoints","track_log","boundary_coordinates","ipfs_hashes","blockchain_tx_hash","ecosystemTypes","restorationMethods","steps","getCurrentLocation","navigator","geolocation","getCurrentPosition","newLocation","coords","latitude","longitude","prev","variant","error","enableHighAccuracy","addWaypoint","waypoint","id","Date","now","timestamp","toISOString","accuracy","handleFileUpload","files","type","uploadedFiles","i","length","Promise","resolve","fileData","name","size","lastModified","ipfs_hash","push","uploadToIPFS","setTimeout","hash","Math","random","toString","substring","removeFile","fileId","filter","handleInputChange","field","event","target","value","handleNestedInputChange","section","handleDeepNestedInputChange","subsection","handleLocationChange","newPosition","validateStep","step","handleNext","handleBack","handleSubmit","projectData","parseFloat","create","errorInfo","message","renderStepContent","container","spacing","children","item","xs","fullWidth","label","onChange","required","placeholder","md","select","map","charAt","toUpperCase","slice","method","inputProps","min","sx","mt","color","toFixed","height","border","borderRadius","center","zoom","style","width","url","attribution","display","multiline","rows","severity","mb","gutterBottom","justifyContent","disabled","onClick","startIcon","_c2","$RefreshReg$"],"sources":["/Users/razashaikh/Desktop/sih/python-app/frontend/src/pages/ProjectCreate.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Typography,\n  Box,\n  TextField,\n  Button,\n  Grid,\n  MenuItem,\n  Stepper,\n  Step,\n  StepLabel,\n  Card,\n  CardContent,\n  Alert,\n  CircularProgress,\n  Paper,\n  IconButton,\n  Chip,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControl,\n  InputLabel,\n  Select,\n  InputAdornment,\n  LinearProgress,\n} from '@mui/material';\nimport {\n  PhotoCamera,\n  VideoCall,\n  AudioFile,\n  GpsFixed,\n  CloudUpload,\n  Delete,\n  Preview,\n  Nature,\n  Water,\n  Thermostat,\n  Speed,\n  Analytics,\n  Blockchain,\n  Storage,\n} from '@mui/icons-material';\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';\nimport { projectAPI, handleAPIError } from '../services/api';\nimport { useSnackbar } from 'notistack';\n\nconst LocationPicker = ({ position, setPosition }) => {\n  useMapEvents({\n    click(e) {\n      setPosition({\n        lat: e.latlng.lat,\n        lng: e.latlng.lng,\n      });\n    },\n  });\n\n  return position ? <Marker position={[position.lat, position.lng]} /> : null;\n};\n\nconst ProjectCreate = () => {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const [activeStep, setActiveStep] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [previewDialog, setPreviewDialog] = useState({ open: false, file: null });\n  \n  // File input refs\n  const photoInputRef = useRef(null);\n  const videoInputRef = useRef(null);\n  const audioInputRef = useRef(null);\n  const documentInputRef = useRef(null);\n\n  const [formData, setFormData] = useState({\n    // Basic project info\n    project_name: '',\n    location: { lat: 19.0760, lng: 72.8777 }, // Default to Mumbai\n    area_hectares: '',\n    ecosystem_type: '',\n    restoration_method: '',\n    community_details: '',\n    contact_email: '',\n    phone_number: '',\n    \n    // Media files with geo-tagging\n    media_files: {\n      photos: [],\n      videos: [],\n      audio_recordings: [],\n      documents: [],\n    },\n    \n    // Field measurements\n    field_measurements: {\n      water_quality: {\n        ph_level: '',\n        salinity: '',\n        temperature: '',\n        dissolved_oxygen: '',\n      },\n      soil_analysis: {\n        carbon_content: '',\n        nitrogen_level: '',\n        phosphorus_level: '',\n        moisture_content: '',\n      },\n      biodiversity: {\n        species_count: '',\n        vegetation_density: '',\n        wildlife_observations: '',\n      },\n      environmental: {\n        tide_level: '',\n        weather_conditions: '',\n        visibility: '',\n      }\n    },\n    \n    // GPS tracking\n    gps_data: {\n      waypoints: [],\n      track_log: [],\n      boundary_coordinates: [],\n    },\n    \n    // IPFS and blockchain\n    ipfs_hashes: [],\n    blockchain_tx_hash: '',\n  });\n\n  const ecosystemTypes = [\n    'mangrove',\n    'seagrass',\n    'salt_marsh',\n    'coastal_wetland',\n    'coral_reef',\n    'mudflat',\n  ];\n\n  const restorationMethods = [\n    'Natural regeneration',\n    'Assisted regeneration',\n    'Active restoration',\n    'Hybrid approach',\n    'Community-based restoration',\n    'Scientific intervention',\n  ];\n\n  const steps = [\n    'Project Details', \n    'Location & GPS', \n    'Media Upload', \n    'Field Measurements', \n    'Community Info', \n    'Blockchain & IPFS',\n    'Review & Submit'\n  ];\n\n  // Get current GPS location\n  const getCurrentLocation = useCallback(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const newLocation = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          setFormData(prev => ({ ...prev, location: newLocation }));\n          enqueueSnackbar('Location updated successfully!', { variant: 'success' });\n        },\n        (error) => {\n          enqueueSnackbar('Unable to get current location', { variant: 'warning' });\n        },\n        { enableHighAccuracy: true }\n      );\n    } else {\n      enqueueSnackbar('Geolocation is not supported by this browser', { variant: 'error' });\n    }\n  }, [enqueueSnackbar]);\n\n  // Add GPS waypoint\n  const addWaypoint = useCallback(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const waypoint = {\n            id: Date.now(),\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n            timestamp: new Date().toISOString(),\n            accuracy: position.coords.accuracy,\n          };\n          setFormData(prev => ({\n            ...prev,\n            gps_data: {\n              ...prev.gps_data,\n              waypoints: [...prev.gps_data.waypoints, waypoint]\n            }\n          }));\n          enqueueSnackbar('Waypoint added successfully!', { variant: 'success' });\n        },\n        (error) => {\n          enqueueSnackbar('Unable to get GPS location for waypoint', { variant: 'warning' });\n        },\n        { enableHighAccuracy: true }\n      );\n    }\n  }, [enqueueSnackbar]);\n\n  // Handle file upload with geo-tagging\n  const handleFileUpload = async (files, type) => {\n    setIsUploading(true);\n    setUploadProgress(0);\n    \n    const uploadedFiles = [];\n    \n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      \n      // Get current location for geo-tagging\n      const location = await new Promise((resolve) => {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(\n            (position) => resolve({\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n              accuracy: position.coords.accuracy,\n            }),\n            () => resolve(formData.location) // Fallback to manual location\n          );\n        } else {\n          resolve(formData.location);\n        }\n      });\n\n      const fileData = {\n        id: Date.now() + i,\n        file,\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified,\n        location,\n        timestamp: new Date().toISOString(),\n        ipfs_hash: '', // To be filled after IPFS upload\n      };\n\n      uploadedFiles.push(fileData);\n      setUploadProgress(((i + 1) / files.length) * 100);\n    }\n\n    setFormData(prev => ({\n      ...prev,\n      media_files: {\n        ...prev.media_files,\n        [type]: [...prev.media_files[type], ...uploadedFiles]\n      }\n    }));\n\n    setIsUploading(false);\n    setUploadProgress(0);\n    enqueueSnackbar(`${files.length} ${type} uploaded successfully!`, { variant: 'success' });\n  };\n\n  // Upload to IPFS (simulated)\n  const uploadToIPFS = async (file) => {\n    // Simulate IPFS upload\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const hash = `Qm${Math.random().toString(36).substring(2, 15)}${Math.random().toString(36).substring(2, 15)}`;\n        resolve(hash);\n      }, 1000);\n    });\n  };\n\n  // Remove uploaded file\n  const removeFile = (type, fileId) => {\n    setFormData(prev => ({\n      ...prev,\n      media_files: {\n        ...prev.media_files,\n        [type]: prev.media_files[type].filter(file => file.id !== fileId)\n      }\n    }));\n    enqueueSnackbar('File removed successfully', { variant: 'info' });\n  };\n\n  const handleInputChange = (field) => (event) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: event.target.value,\n    }));\n  };\n\n  const handleNestedInputChange = (section, field) => (event) => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: event.target.value,\n      }\n    }));\n  };\n\n  const handleDeepNestedInputChange = (section, subsection, field) => (event) => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [subsection]: {\n          ...prev[section][subsection],\n          [field]: event.target.value,\n        }\n      }\n    }));\n  };\n\n  const handleLocationChange = (newPosition) => {\n    setFormData(prev => ({\n      ...prev,\n      location: newPosition,\n    }));\n  };\n\n  const validateStep = (step) => {\n    switch (step) {\n      case 0:\n        return formData.project_name && formData.ecosystem_type && formData.restoration_method;\n      case 1:\n        return formData.area_hectares && formData.location.lat && formData.location.lng;\n      case 2:\n        return formData.community_details && formData.contact_email && formData.phone_number;\n      default:\n        return true;\n    }\n  };\n\n  const handleNext = () => {\n    if (validateStep(activeStep)) {\n      setActiveStep(prev => prev + 1);\n    } else {\n      enqueueSnackbar('Please fill in all required fields', { variant: 'warning' });\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(prev => prev - 1);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n      \n      const projectData = {\n        ...formData,\n        area_hectares: parseFloat(formData.area_hectares),\n      };\n\n      await projectAPI.create(projectData);\n      \n      enqueueSnackbar('Project created successfully!', { variant: 'success' });\n      navigate('/projects');\n      \n    } catch (error) {\n      const errorInfo = handleAPIError(error);\n      enqueueSnackbar(errorInfo.message, { variant: 'error' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderStepContent = () => {\n    switch (activeStep) {\n      case 0:\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Project Name\"\n                value={formData.project_name}\n                onChange={handleInputChange('project_name')}\n                required\n                placeholder=\"e.g., Coastal Mangrove Restoration Project\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                select\n                label=\"Ecosystem Type\"\n                value={formData.ecosystem_type}\n                onChange={handleInputChange('ecosystem_type')}\n                required\n              >\n                {ecosystemTypes.map((type) => (\n                  <MenuItem key={type} value={type}>\n                    {type.charAt(0).toUpperCase() + type.slice(1)}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                select\n                label=\"Restoration Method\"\n                value={formData.restoration_method}\n                onChange={handleInputChange('restoration_method')}\n                required\n              >\n                {restorationMethods.map((method) => (\n                  <MenuItem key={method} value={method}>\n                    {method}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        );\n\n      case 1:\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                type=\"number\"\n                label=\"Area (Hectares)\"\n                value={formData.area_hectares}\n                onChange={handleInputChange('area_hectares')}\n                required\n                inputProps={{ min: 0, step: 0.1 }}\n              />\n              <Box sx={{ mt: 2 }}>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Current Location: {formData.location.lat.toFixed(6)}, {formData.location.lng.toFixed(6)}\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Box sx={{ height: 300, border: '1px solid #ccc', borderRadius: 1 }}>\n                <MapContainer\n                  center={[formData.location.lat, formData.location.lng]}\n                  zoom={13}\n                  style={{ height: '100%', width: '100%' }}\n                >\n                  <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                  />\n                  <LocationPicker \n                    position={formData.location} \n                    setPosition={handleLocationChange}\n                  />\n                </MapContainer>\n              </Box>\n              <Typography variant=\"caption\" color=\"textSecondary\" sx={{ mt: 1, display: 'block' }}>\n                Click on the map to set project location\n              </Typography>\n            </Grid>\n          </Grid>\n        );\n\n      case 2:\n        return (\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                multiline\n                rows={4}\n                label=\"Community Details\"\n                value={formData.community_details}\n                onChange={handleInputChange('community_details')}\n                required\n                placeholder=\"Describe the local communities involved, their role, and expected benefits...\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                type=\"email\"\n                label=\"Contact Email\"\n                value={formData.contact_email}\n                onChange={handleInputChange('contact_email')}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                value={formData.phone_number}\n                onChange={handleInputChange('phone_number')}\n                required\n                placeholder=\"+91 XXXXX XXXXX\"\n              />\n            </Grid>\n          </Grid>\n        );\n\n      case 3:\n        return (\n          <Box>\n            <Alert severity=\"info\" sx={{ mb: 3 }}>\n              Please review your project details before submission. Once submitted, the project will be sent to NCCR for review and approval.\n            </Alert>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <Typography variant=\"h6\" gutterBottom>Project Information</Typography>\n                <Typography><strong>Name:</strong> {formData.project_name}</Typography>\n                <Typography><strong>Ecosystem:</strong> {formData.ecosystem_type}</Typography>\n                <Typography><strong>Method:</strong> {formData.restoration_method}</Typography>\n                <Typography><strong>Area:</strong> {formData.area_hectares} hectares</Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Typography variant=\"h6\" gutterBottom>Contact Information</Typography>\n                <Typography><strong>Email:</strong> {formData.contact_email}</Typography>\n                <Typography><strong>Phone:</strong> {formData.phone_number}</Typography>\n                <Typography><strong>Location:</strong> {formData.location.lat.toFixed(4)}, {formData.location.lng.toFixed(4)}</Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"h6\" gutterBottom>Community Details</Typography>\n                <Typography>{formData.community_details}</Typography>\n              </Grid>\n            </Grid>\n          </Box>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Create New Blue Carbon Project\n      </Typography>\n\n      <Card>\n        <CardContent>\n          <Stepper activeStep={activeStep} sx={{ mb: 4 }}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n\n          {renderStepContent()}\n\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 4 }}>\n            <Button\n              disabled={activeStep === 0}\n              onClick={handleBack}\n            >\n              Back\n            </Button>\n\n            <Box>\n              {activeStep === steps.length - 1 ? (\n                <Button\n                  variant=\"contained\"\n                  onClick={handleSubmit}\n                  disabled={loading}\n                  startIcon={loading ? <CircularProgress size={20} /> : null}\n                >\n                  {loading ? 'Submitting...' : 'Submit Project'}\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  onClick={handleNext}\n                  disabled={!validateStep(activeStep)}\n                >\n                  Next\n                </Button>\n              )}\n            </Box>\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default ProjectCreate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{// Check for stored authentication\nconst storedUser=localStorage.getItem('auth_user');const storedToken=localStorage.getItem('auth_token');if(storedUser&&storedToken){try{const userData=JSON.parse(storedUser);setUser(userData);setIsAuthenticated(true);}catch(error){console.error('Error parsing stored user data:',error);localStorage.removeItem('auth_user');localStorage.removeItem('auth_token');}}setLoading(false);},[]);const login=async(email,password)=>{try{// Demo authentication - replace with real API call\nlet userData;if(email==='admin@nccr.gov.in'&&password==='admin123'){userData={id:'admin_001',email:'admin@nccr.gov.in',name:'NCCR Administrator',role:'admin',organization:'National Centre for Coastal Research',permissions:['project_review','analytics','user_management','system_admin']};}else if(email==='user@demo.com'&&password==='user123'){userData={id:'user_001',email:'user@demo.com',name:'Community Project Manager',role:'user',organization:'Coastal Community Group',permissions:['project_create','project_view','data_upload']};}else{throw new Error('Invalid credentials');}const token=\"demo_token_\".concat(userData.role,\"_\").concat(Date.now());// Store authentication data\nlocalStorage.setItem('auth_user',JSON.stringify(userData));localStorage.setItem('auth_token',token);setUser(userData);setIsAuthenticated(true);return{success:true,user:userData};}catch(error){throw new Error(error.message||'Login failed');}};const logout=()=>{localStorage.removeItem('auth_user');localStorage.removeItem('auth_token');setUser(null);setIsAuthenticated(false);};const hasPermission=permission=>{var _user$permissions;return(user===null||user===void 0?void 0:(_user$permissions=user.permissions)===null||_user$permissions===void 0?void 0:_user$permissions.includes(permission))||false;};const isAdmin=()=>{return(user===null||user===void 0?void 0:user.role)==='admin';};const isUser=()=>{return(user===null||user===void 0?void 0:user.role)==='user';};const value={user,isAuthenticated,loading,login,logout,hasPermission,isAdmin,isUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
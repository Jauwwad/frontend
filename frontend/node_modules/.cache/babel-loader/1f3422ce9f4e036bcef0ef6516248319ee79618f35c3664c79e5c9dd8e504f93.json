{"ast":null,"code":"var _jsxFileName = \"/Users/razashaikh/Desktop/sih frontend/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for stored authentication\n    const storedUser = localStorage.getItem('auth_user');\n    const storedToken = localStorage.getItem('auth_token');\n    if (storedUser && storedToken) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        localStorage.removeItem('auth_user');\n        localStorage.removeItem('auth_token');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // Demo authentication - replace with real API call\n      let userData;\n      if (email === 'admin@nccr.gov.in' && password === 'admin123') {\n        userData = {\n          id: 'admin_001',\n          email: 'admin@nccr.gov.in',\n          name: 'NCCR Administrator',\n          role: 'admin',\n          organization: 'National Centre for Coastal Research',\n          permissions: ['project_review', 'analytics', 'user_management', 'system_admin']\n        };\n      } else if (email === 'user@demo.com' && password === 'user123') {\n        userData = {\n          id: 'user_001',\n          email: 'user@demo.com',\n          name: 'Community Project Manager',\n          role: 'user',\n          organization: 'Coastal Community Group',\n          permissions: ['project_create', 'project_view', 'data_upload']\n        };\n      } else {\n        throw new Error('Invalid credentials');\n      }\n      const token = `demo_token_${userData.role}_${Date.now()}`;\n\n      // Store authentication data\n      localStorage.setItem('auth_user', JSON.stringify(userData));\n      localStorage.setItem('auth_token', token);\n      setUser(userData);\n      setIsAuthenticated(true);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      throw new Error(error.message || 'Login failed');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('auth_user');\n    localStorage.removeItem('auth_token');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const hasPermission = permission => {\n    var _user$permissions;\n    return (user === null || user === void 0 ? void 0 : (_user$permissions = user.permissions) === null || _user$permissions === void 0 ? void 0 : _user$permissions.includes(permission)) || false;\n  };\n  const isAdmin = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  };\n  const isUser = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'user';\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    hasPermission,\n    isAdmin,\n    isUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","storedUser","localStorage","getItem","storedToken","userData","JSON","parse","error","console","removeItem","login","email","password","id","name","role","organization","permissions","token","Date","now","setItem","stringify","success","message","logout","hasPermission","permission","_user$permissions","includes","isAdmin","isUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/razashaikh/Desktop/sih frontend/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored authentication\n    const storedUser = localStorage.getItem('auth_user');\n    const storedToken = localStorage.getItem('auth_token');\n    \n    if (storedUser && storedToken) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        localStorage.removeItem('auth_user');\n        localStorage.removeItem('auth_token');\n      }\n    }\n    \n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      // Demo authentication - replace with real API call\n      let userData;\n      \n      if (email === 'admin@nccr.gov.in' && password === 'admin123') {\n        userData = {\n          id: 'admin_001',\n          email: 'admin@nccr.gov.in',\n          name: 'NCCR Administrator',\n          role: 'admin',\n          organization: 'National Centre for Coastal Research',\n          permissions: ['project_review', 'analytics', 'user_management', 'system_admin']\n        };\n      } else if (email === 'user@demo.com' && password === 'user123') {\n        userData = {\n          id: 'user_001',\n          email: 'user@demo.com',\n          name: 'Community Project Manager',\n          role: 'user',\n          organization: 'Coastal Community Group',\n          permissions: ['project_create', 'project_view', 'data_upload']\n        };\n      } else {\n        throw new Error('Invalid credentials');\n      }\n\n      const token = `demo_token_${userData.role}_${Date.now()}`;\n      \n      // Store authentication data\n      localStorage.setItem('auth_user', JSON.stringify(userData));\n      localStorage.setItem('auth_token', token);\n      \n      setUser(userData);\n      setIsAuthenticated(true);\n      \n      return { success: true, user: userData };\n    } catch (error) {\n      throw new Error(error.message || 'Login failed');\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('auth_user');\n    localStorage.removeItem('auth_token');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  const hasPermission = (permission) => {\n    return user?.permissions?.includes(permission) || false;\n  };\n\n  const isAdmin = () => {\n    return user?.role === 'admin';\n  };\n\n  const isUser = () => {\n    return user?.role === 'user';\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    hasPermission,\n    isAdmin,\n    isUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}